[{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Question Per Tag\n    Application->>+Server: getQuestionsByTagId(tid)\n    Server->>-Tag (Mongo): Tag.findById\n    Tag (Mongo)-->>+Server: \n    Server->>+Question (Mongo): Question.find(tid)\n    Question (Mongo)-->>-Server: \n    Server-->>+Server: sort()\n    Server-->>-Application: questionList\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":true,"editorMode":"code"},"time":1702086063689,"type":"auto","id":"b36994d7-1f1e-449e-9b43-444b90c7226f","name":"high-raincoat"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Tags Page\n    Application->>+Server: getTagsWithCount()\n    Server->>+Question (Mongo): Question.aggregate()\n    Question (Mongo)->>+Tag (Mongo): Tag.findById(_id)\n    Tag (Mongo)-->>-Question (Mongo): \n    Question (Mongo)-->>-Server: \n    Server-->>+Server: sort()\n    Server-->>-Application: tagsList\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":true,"editorMode":"code"},"time":1702086003685,"type":"auto","id":"88880df3-f474-4e49-b85a-557b20007dc6","name":"icy-petabyte"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Tags Page\n    Application->>+Server: getTagsWithCount()\n    Server->>+Question (Mongo): Question.aggregate()\n    Question (Mongo)->>+Tag (Mongo): Tag.findById(_id)\n    Tag (Mongo)-->>-Question (Mongo): \n    Question (Mongo)-->>-Server: \n    Server-->>+Server: sort()\n    Server-->>-Application: tagsList\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1702085884474,"type":"auto","id":"2488f78e-cbae-4ca8-b656-e22ff39f84ac","name":"helpless-cricket"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Tags Page\n    Application->>+Server: getTagsWithCount()\n    Server->>+Tag (Mongo): Tag.aggregate([\n        { $lookup: { from: \"questions\", localField: \"_id\", foreignField: \"tags\", as: \"questions\" } },\n        { $project: { name: 1, count: { $size: \"$questions\" } } }\n    ])\n    Tag (Mongo)-->>-Server: aggregatedTagsWithCount\n    Server-->>+Server: sort(aggregatedTagsWithCount)\n    Server-->>-Application: tagsList\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1702085823683,"type":"auto","id":"d102fe1f-1e78-4479-a633-a5dbe9395585","name":"acoustic-train"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Tags Page\n    Application->>+Server: getTagsWithCount()\n    Server->>+Question (Mongo): Question.aggregate()\n    Question (Mongo)->>+Tag (Mongo): Tag.findById(_id)\n    Tag (Mongo)-->>-Question (Mongo): \n    Question (Mongo)-->>-Server: \n    Server-->>+Server: sort()\n    Server-->>-Application: tagsList\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":true,"editorMode":"code"},"time":1702085608460,"type":"auto","id":"fae500a8-11f5-4ed7-824a-fd7d1be0972b","name":"bent-salesclerk"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Answers Page\n    Application->>-Server: getAnswers(qid)\n    Server->>+Question (Mongo): Question.findById(qid)\n    Question (Mongo)-->>-Server: question\n\n    Server->>+Answer (Mongo): Answer.find({ questionId: qid })\n    Answer (Mongo)-->>-Server: answersToQuestion\n\n    Server->>+Comments (Mongo): Comments.find({ questionId: qid })\n    Comments (Mongo)-->>-Server: questionComments\n\n    Server->>+Comments (Mongo): Comments.find({ answerId: { $in: answersToQuestion.map(a => a._id) } })\n    Comments (Mongo)-->>-Server: answersComments\n\n    Server-->>+Server: answers.sort()\n    Server-->>-Application: answersList, questionComments, answersComments\n\n    Application->>+Server: incrementQuestionView(qid)\n    Server->>+Question (Mongo): Question.findById(qid)\n    Question (Mongo)->>+Question (Mongo): question.save()\n\n    Question (Mongo)-->>-Server: \n    Server-->>-Application: question\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1702085187673,"type":"auto","id":"b71ea443-2c90-4c3d-878e-11e1f0e9eeaa","name":"screeching-book"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Answers Page\n    Application->>-Server: getAnswers(qid)\n    Server->>+Question (Mongo): Question.findById(qid)\n    Question (Mongo)-->>-Server: question\n\n\n    Server->>+Answer (Mongo): Answer.find(_id)\n    Answer (Mongo)-->>-Server: answersToQuestion\n\n    Server-->>+Server: answers.sort()\n    Server-->>-Application: answersList\n\n    Application->>+Server: incrementQuestionView(qid)\n    Server->>+Question (Mongo): Question.findById(questionId)\n    Question (Mongo)->>+Question (Mongo): question.save()\n\n    Question (Mongo)-->>-Server: \n    Server-->>-Application: question\n\n\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":true,"editorMode":"code"},"time":1702085128460,"type":"auto","id":"eb7d220f-434c-4fee-9ffe-3923538bc792","name":"helpless-park"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n\n    Application->>+Server: authenticate(authType)\n    \n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":true,"editorMode":"code"},"time":1702085067673,"type":"auto","id":"b4c54e37-1093-40ac-b21e-3f2c0bd80007","name":"uneven-bear"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Access Application\n\n    alt Login\n        Application->>+User: Prompt Login\n        User->>+Application: Provide Credentials\n        Application->>+Server: Authenticate User\n        Server-->>-Application: Authentication Response\n    else Guest\n        Application->>+User: Prompt Guest Access\n        User->>+Application: Choose to Stay as Guest\n    end\n\n    Application->>+Server: Request Landing Page\n    Server-->>-Application: Provide Landing Page\n\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1702084221036,"type":"auto","id":"bc91fed9-cf00-4d11-ac54-24236cc6266e","name":"curved-fireman"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    \n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1702084161032,"type":"auto","id":"98a52ea9-28aa-4cd6-856c-e82758e2b634","name":"angry-stone"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n\n    Application->>+Server: authenticate(authType)\n    \n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1702084100248,"type":"auto","id":"a7c32d06-e428-4fc3-92dd-2466f2cabb86","name":"tangy-minister"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":true,"editorMode":"code"},"time":1702084040246,"type":"auto","id":"e21b6d2b-a18c-40ec-8b3e-b0272b1df358","name":"whining-application"},{"state":{"code":"---\ntitle: Final Assignment Class Diagram\n---\nclassDiagram\n    Server \"1\"--\"0..*\" Question: manages\n    Server \"1\"--\"0..*\" Answer: manages\n    Server \"1\"--\"0..*\" Tag: manages\n    Server \"1\"--\"0..*\" Comment: manages\n    Server \"1\"--\"0..*\" User: manages\n    Question \"1\"--\"0..*\" Tag: has\n    Question \"1\"--\"0..*\" Answer: has\n    Question \"1\"--\"0..*\" Comment: has\n    Answer \"1\"--\"0..*\" Comment: has\n    User \"1\"--\"0..*\" Comment: has\n    User \"1\"--\"0..*\" Answer: has\n    User \"1\"--\"0..*\" Question: has\n    User \"1\"--\"0..*\" Tag: has\n\n    Server : +questions List[Question]\n    Server : +answers List[Answer]\n    Server : +tags List[Tag]\n    Server: +getSearchResultsList()\n    Server: +getTags()\n    Server: +getTagsWithCount()\n    Server: +IncrementQuestionView(qid)\n    Server: +postQuestion()\n    Server: +postAnswer()\n    Server: +getQuestionsByTagName()\n    Server: +getQuestionsByTagId()\n    Server: +getQuestions(sortType)\n    Server: +getHome()\n    Server: +getAnswers(qid)\n\n    class User{\n        +String uid\n        +String username\n        +Number reputation\n        +String email\n        +String password\n        +Date commentedOn\n        +List question    \n        +List answer    \n        +List tag    \n        }\n\n    class Comment{\n        +String cid\n        +String text\n        +Date commentedOn\n        +User commented_by\n        +Question question\n        +Answer answer\n        +Number votes\n        +Comment(cid:String, text:String, commentedOn:Date, commented_by:String, question:Question, answer:Answer, votes:Number)\n    }\n\n    class Question{\n      +String qid\n      +String title\n      +String text\n      +List tagIds\n      +String askedBy\n      +Date askDate\n      +List ansIds\n      +Int views\n      +Question(qid: String, title: String, text: String, tags: Set[Tag], author: String, askDate: Date)\n    }\n\n    class Answer{\n        \n      -String aid\n      -String text\n      -String ansBy\n      -Date ansDate\n      +Answer(aid: String, text: String, author: String, askDate: Date)\n\n    }\n    class Tag{\n      -String tid\n      -String name\n      Tag(tid, String, name: String)\n    }","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":false,"updateDiagram":false,"editorMode":"code"},"time":1702083980247,"type":"auto","id":"9896b22d-56c1-43f9-b9c6-91e9773ac094","name":"thundering-breakfast"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Question Per Tag\n    Application->>+Server: getQuestionsByTagId(tid)\n    Server->>-Tag (Mongo): Tag.findById\n    Tag (Mongo)-->>+Server: \n    Server->>+Question (Mongo): Question.find(tid)\n    Question (Mongo)-->>-Server: \n    Server-->>+Server: sort()\n    Server-->>-Application: questionList\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700100225317,"type":"manual","id":"11cbec63-e175-4ca7-88c5-b7314d88f204","name":"absurd-advantage"}]